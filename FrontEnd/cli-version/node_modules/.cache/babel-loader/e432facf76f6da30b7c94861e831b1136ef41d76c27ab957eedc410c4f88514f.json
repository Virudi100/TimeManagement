{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../assets/epitechlogo.png';\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"logo\",\n  src: _imports_0\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Sign Up\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"register\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"Login\");\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event),\n    placeholder: \"Enter Name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n    placeholder: \"Enter Email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    placeholder: \"Enter password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.signUp && $options.signUp(...args))\n  }, \"Sign Up\"), _createElementVNode(\"p\", null, [_createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => [_hoisted_4]),\n    _: 1 /* STABLE */\n  })])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";OACsBA,UAA+B;gCAAjDC,oBAAoD;EAA/CC,KAAK,EAAC,MAAM;EAACC,GAA+B,EAA/BH;;gCAClBC,oBAAgB,YAAZ,SAAO;;EACNC,KAAK,EAAC;AAAU;iDAMY,OAAK;;;6DARtCE,UAAoD,EACpDC,UAAgB,EAChBJ,oBAQM,OARNK,UAQM,mBAPFL,oBAA6D;IAAtDM,IAAI,EAAC,MAAM;+DAAUC,UAAI;IAAEC,WAAW,EAAC;iDAAlBD,UAAI,qBAChCP,oBAA+D;IAAxDM,IAAI,EAAC,MAAM;+DAAUC,WAAK;IAAEC,WAAW,EAAC;iDAAnBD,WAAK,qBACjCP,oBAAwE;IAAjEM,IAAI,EAAC,UAAU;+DAAUC,cAAQ;IAAEC,WAAW,EAAC;iDAAtBD,cAAQ,KACxCP,oBAA4C;IAA/BS,OAAK,yCAAEC,2CAAM;KAAE,SAAO,GACnCV,oBAEI,YADAW,aAA4CC;IAA/BC,EAAE,EAAC;EAAQ;sBAAC,MAAK","names":["_imports_0","_createElementVNode","class","src","_hoisted_1","_hoisted_2","_hoisted_3","type","$data","placeholder","onClick","$options","_createVNode","_component_router_link","to"],"sourceRoot":"","sources":["C:\\Users\\Anthony\\Desktop\\TimeManagement\\FrontEnd\\cli-version\\src\\components\\SignUp.vue"],"sourcesContent":["<template>\r\n    <img class=\"logo\" src=\"../assets/epitechlogo.png\" />\r\n    <h1>Sign Up</h1>\r\n    <div class=\"register\">\r\n        <input type=\"text\" v-model=\"name\" placeholder=\"Enter Name\" />\r\n        <input type=\"text\" v-model=\"email\" placeholder=\"Enter Email\" />\r\n        <input type=\"password\" v-model=\"password\" placeholder=\"Enter password\"/>\r\n        <button v-on:click=\"signUp\">Sign Up</button>\r\n        <p>\r\n            <router-link to=\"/login\">Login</router-link>\r\n        </p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    name :\"SignUp\",\r\n    data()\r\n    {\r\n        return{\r\n            name:\"\",\r\n            email:\"\",\r\n            password:\"\"\r\n        }\r\n    },\r\n    methods:{\r\n        async signUp()\r\n        {\r\n            let result = await axios.post(\"http://localhost:3000/users\",{\r\n                email:this.email,\r\n                password:this.password,\r\n                name:this.name\r\n            });\r\n            \r\n            console.warn(result);\r\n            \r\n            if(result.status == 201)\r\n            {\r\n                alert(\"sign-up done\");\r\n                localStorage.setItem(\"user-info\",JSON.stringify(result.data))\r\n                this.$router.push({ name: 'Home' })  \r\n            }\r\n        }\r\n    },\r\n    mounted()\r\n    {\r\n        let user= localStorage.getItem('user-info');\r\n        if(user)\r\n        {\r\n            this.$router.push({ name: 'Home' })\r\n        }\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}